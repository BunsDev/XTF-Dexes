{
  "address": "0x6F48ed8Ba8aae013Ba46a6c4088BA553ef7AC5Ed",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_comparisonTokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "comparisonTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "feeTiers",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolsForToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTotalLiquidityForToken",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "totalLiquidity",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xded0c3aafa29ceb92001df891bf870e92b4fbf3eb6675ae20b592b72fc4aae1b",
  "receipt": {
    "to": null,
    "from": "0x2a1F5eB3e84e58e6F1e565306298B9dE1273f203",
    "contractAddress": "0x6F48ed8Ba8aae013Ba46a6c4088BA553ef7AC5Ed",
    "transactionIndex": 32,
    "gasUsed": "549064",
    "logsBloom": "0x
    "blockHash": "0xd2ae046261c20e39eb7b19032b10857e9d6c4847cd761540cdf387397e539ea9",
    "transactionHash": "0xded0c3aafa29ceb92001df891bf870e92b4fbf3eb6675ae20b592b72fc4aae1b",
    "logs": [],
    "blockNumber": 6021449,
    "cumulativeGasUsed": "4027314",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb0E564d1e196FFFC140280f7f0BE8D48f48b2F3a",
    [
      "0x47D3c247455761CF829Deb210b6Fc7eb876a3687"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "2c007285faf9b4a97aafef1992660d50",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_comparisonTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"comparisonTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsForToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTotalLiquidityForToken\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalLiquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityManager.sol\":\"LiquidityManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\",\"keccak256\":\"0x481936e26021d5a9d68da06803eb1c8474673d281c256c14a471764c59c031e6\",\"license\":\"GPL-2.0-or-later\"},\"contracts/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool{\\n    function liquidity() external view returns (uint128);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n}\",\"keccak256\":\"0xd9fa5d92a3c7d1f53ff0ddbd4e04a5ef84faae96b067597e27016b8567e5fafc\",\"license\":\"GPL-2.0-or-later\"},\"contracts/LiquidityManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IUniswapV3Factory.sol\\\";\\nimport \\\"./IUniswapV3Pool.sol\\\";\\n\\ncontract LiquidityManager {\\n    IUniswapV3Factory public factory;\\n    uint24[] public feeTiers = [500, 3000, 10000]; // Example fee tiers: 0.05%, 0.3%, 1%\\n    address[] public comparisonTokens;\\n\\n    constructor(address _factory, address[] memory _comparisonTokens) {\\n        factory = IUniswapV3Factory(_factory);\\n        comparisonTokens = _comparisonTokens;\\n    }\\n\\n    function getPoolsForToken(address token) public view returns (address[] memory) {\\n        uint256 poolCount = 0;\\n        address[] memory tempPools = new address[](comparisonTokens.length * feeTiers.length);\\n\\n        for (uint256 i = 0; i < comparisonTokens.length; i++) {\\n            if (comparisonTokens[i] == token) continue;\\n            for (uint256 j = 0; j < feeTiers.length; j++) {\\n                address pool = factory.getPool(token, comparisonTokens[i], feeTiers[j]);\\n                if (pool != address(0)) {\\n                    tempPools[poolCount] = pool;\\n                    poolCount++;\\n                }\\n            }\\n        }\\n\\n        // Create an array of the actual size\\n        address[] memory pools = new address[](poolCount);\\n        for (uint256 i = 0; i < poolCount; i++) {\\n            pools[i] = tempPools[i];\\n        }\\n\\n        return pools;\\n    }\\n\\n    function getTotalLiquidityForToken(address token) public view returns (uint128 totalLiquidity) {\\n        address[] memory pools = getPoolsForToken(token);\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            totalLiquidity += IUniswapV3Pool(pools[i]).liquidity();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe042c2267d2ea4f215d96a4ce994d291b95072f5b38110493e2b684218470fb2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040526101f46080908152610bb860a05261271060c052610026906001906003610088565b5034801561003357600080fd5b50604051610963380380610963833981016040819052610052916101cf565b600080546001600160a01b0319166001600160a01b0384161790558051610080906002906020840190610133565b5050506102a8565b82805482825590600052602060002090600901600a900481019282156101235791602002820160005b838211156100f257835183826101000a81548162ffffff021916908361ffff16021790555092602001926003016020816002010492830192600103026100b1565b80156101215782816101000a81549062ffffff02191690556003016020816002010492830192600103026100f2565b505b5061012f929150610188565b5090565b828054828255906000526020600020908101928215610123579160200282015b8281111561012357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610153565b5b8082111561012f5760008155600101610189565b80516001600160a01b03811681146101b457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101e257600080fd5b6101eb8361019d565b602084810151919350906001600160401b038082111561020a57600080fd5b818601915086601f83011261021e57600080fd5b815181811115610230576102306101b9565b8060051b604051601f19603f83011681018181108582111715610255576102556101b9565b60405291825284820192508381018501918983111561027357600080fd5b938501935b82851015610298576102898561019d565b84529385019392850192610278565b8096505050505050509250929050565b6106ac806102b76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806313f91f3c1461005c578063162f37fa1461008c578063230ed44a146100ac57806361566a3e146100d3578063c45a0155146100fe575b600080fd5b61006f61006a3660046104ef565b610111565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a366004610520565b61013b565b6040516100839190610544565b6100bf6100ba3660046104ef565b6103fc565b60405162ffffff9091168152602001610083565b6100e66100e1366004610520565b610435565b6040516001600160801b039091168152602001610083565b60005461006f906001600160a01b031681565b6002818154811061012157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546002546060916000918291610152916105a7565b67ffffffffffffffff81111561016a5761016a6105c4565b604051908082528060200260200182016040528015610193578160200160208202803683370190505b50905060005b60025481101561034a57846001600160a01b0316600282815481106101c0576101c06105da565b6000918252602090912001546001600160a01b0316146103385760005b6001548110156103365760008054600280546001600160a01b0390921691631698ee82918a9187908110610213576102136105da565b600091825260209091200154600180546001600160a01b03909216918790811061023f5761023f6105da565b60009182526020909120600a8083049091015460405160e087901b6001600160e01b03191681526001600160a01b03958616600482015293909416602484015290066003026101000a90910462ffffff166044820152606401602060405180830381865afa1580156102b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d991906105f0565b90506001600160a01b0381161561032357808486815181106102fd576102fd6105da565b6001600160a01b03909216602092830291909101909101528461031f8161060d565b9550505b508061032e8161060d565b9150506101dd565b505b806103428161060d565b915050610199565b5060008267ffffffffffffffff811115610366576103666105c4565b60405190808252806020026020018201604052801561038f578160200160208202803683370190505b50905060005b838110156103f3578281815181106103af576103af6105da565b60200260200101518282815181106103c9576103c96105da565b6001600160a01b0390921660209283029190910190910152806103eb8161060d565b915050610395565b50949350505050565b6001818154811061040c57600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b6000806104418361013b565b905060005b81518110156104e857818181518110610461576104616105da565b60200260200101516001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610626565b6104d4908461064f565b9250806104e08161060d565b915050610446565b5050919050565b60006020828403121561050157600080fd5b5035919050565b6001600160a01b038116811461051d57600080fd5b50565b60006020828403121561053257600080fd5b813561053d81610508565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156105855783516001600160a01b031683529284019291840191600101610560565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105be576105be610591565b92915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561060257600080fd5b815161053d81610508565b60006001820161061f5761061f610591565b5060010190565b60006020828403121561063857600080fd5b81516001600160801b038116811461053d57600080fd5b6001600160801b0381811683821601908082111561066f5761066f610591565b509291505056fea2646970667358221220f108818cd8da4c266397329485d4f777c2265d3860276f6bc3cc3136c1dea23864736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806313f91f3c1461005c578063162f37fa1461008c578063230ed44a146100ac57806361566a3e146100d3578063c45a0155146100fe575b600080fd5b61006f61006a3660046104ef565b610111565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a366004610520565b61013b565b6040516100839190610544565b6100bf6100ba3660046104ef565b6103fc565b60405162ffffff9091168152602001610083565b6100e66100e1366004610520565b610435565b6040516001600160801b039091168152602001610083565b60005461006f906001600160a01b031681565b6002818154811061012157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546002546060916000918291610152916105a7565b67ffffffffffffffff81111561016a5761016a6105c4565b604051908082528060200260200182016040528015610193578160200160208202803683370190505b50905060005b60025481101561034a57846001600160a01b0316600282815481106101c0576101c06105da565b6000918252602090912001546001600160a01b0316146103385760005b6001548110156103365760008054600280546001600160a01b0390921691631698ee82918a9187908110610213576102136105da565b600091825260209091200154600180546001600160a01b03909216918790811061023f5761023f6105da565b60009182526020909120600a8083049091015460405160e087901b6001600160e01b03191681526001600160a01b03958616600482015293909416602484015290066003026101000a90910462ffffff166044820152606401602060405180830381865afa1580156102b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d991906105f0565b90506001600160a01b0381161561032357808486815181106102fd576102fd6105da565b6001600160a01b03909216602092830291909101909101528461031f8161060d565b9550505b508061032e8161060d565b9150506101dd565b505b806103428161060d565b915050610199565b5060008267ffffffffffffffff811115610366576103666105c4565b60405190808252806020026020018201604052801561038f578160200160208202803683370190505b50905060005b838110156103f3578281815181106103af576103af6105da565b60200260200101518282815181106103c9576103c96105da565b6001600160a01b0390921660209283029190910190910152806103eb8161060d565b915050610395565b50949350505050565b6001818154811061040c57600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b6000806104418361013b565b905060005b81518110156104e857818181518110610461576104616105da565b60200260200101516001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610626565b6104d4908461064f565b9250806104e08161060d565b915050610446565b5050919050565b60006020828403121561050157600080fd5b5035919050565b6001600160a01b038116811461051d57600080fd5b50565b60006020828403121561053257600080fd5b813561053d81610508565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156105855783516001600160a01b031683529284019291840191600101610560565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105be576105be610591565b92915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561060257600080fd5b815161053d81610508565b60006001820161061f5761061f610591565b5060010190565b60006020828403121561063857600080fd5b81516001600160801b038116811461053d57600080fd5b6001600160801b0381811683821601908082111561066f5761066f610591565b509291505056fea2646970667358221220f108818cd8da4c266397329485d4f777c2265d3860276f6bc3cc3136c1dea23864736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5688,
        "contract": "contracts/LiquidityManager.sol:LiquidityManager",
        "label": "factory",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapV3Factory)5644"
      },
      {
        "astId": 5695,
        "contract": "contracts/LiquidityManager.sol:LiquidityManager",
        "label": "feeTiers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint24)dyn_storage"
      },
      {
        "astId": 5698,
        "contract": "contracts/LiquidityManager.sol:LiquidityManager",
        "label": "comparisonTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint24)dyn_storage": {
        "base": "t_uint24",
        "encoding": "dynamic_array",
        "label": "uint24[]",
        "numberOfBytes": "32"
      },
      "t_contract(IUniswapV3Factory)5644": {
        "encoding": "inplace",
        "label": "contract IUniswapV3Factory",
        "numberOfBytes": "20"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      }
    }
  }
}